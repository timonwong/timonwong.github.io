<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pika on Timon Wong</title><link>https://theo.im/tags/pika/</link><description>Recent content in Pika on Timon Wong</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© timonwong</copyright><lastBuildDate>Thu, 15 May 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://theo.im/tags/pika/index.xml" rel="self" type="application/rss+xml"/><item><title>RabbitMQ笔记（三）: Pika客户端（Python）发送大尺寸消息的问题</title><link>https://theo.im/blog/2014/05/15/rabbitmq-note-3-pika-send-large-message/</link><pubDate>Thu, 15 May 2014 00:00:00 +0000</pubDate><guid>https://theo.im/blog/2014/05/15/rabbitmq-note-3-pika-send-large-message/</guid><description>问题描述 这个问题存在很久了，现象就是使用 Pika 库的客户端在发送大尺寸消息后，RabbitMQ 没有收到，Consumer 那里会认为消息已丢失。
NOTE: 即使在本文写时的最新版(v0.9.13)依然存在这个问题。
分析 因为网络状态很好，所以没有考虑网络的错误，直接考虑Pika库的问题。
那么第一步就是把 Pika 的代码拿来读一遍，主要看它是怎么发送消息的，经过一番探索，找到了 pika/adapters/base_connection.py 这个文件，来看看里面的内容：
def _handle_write(self): &amp;#34;&amp;#34;&amp;#34;Handle any outbound buffer writes that need to take place.&amp;#34;&amp;#34;&amp;#34; total_written = 0 if self.outbound_buffer: try: bytes_written = self.socket.send(self.outbound_buffer.popleft()) except socket.timeout: raise except socket.error, error: return self._handle_error(error) total_written += bytes_written return total_written 看出问题了吗？
来看看socket.send的文档吧：
Send data to the socket. The socket must be connected to a remote socket. The optional flags argument has the same meaning as for recv() above.</description></item></channel></rss>