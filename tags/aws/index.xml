<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS on Timon Wong</title><link>https://theo.im/tags/aws/</link><description>Recent content in AWS on Timon Wong</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© timonwong</copyright><lastBuildDate>Tue, 17 Oct 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://theo.im/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Minio 为阿里云 OSS 提供 AWS S3 兼容 API</title><link>https://theo.im/blog/2017/10/17/use-minio-with-aliyun-oss/</link><pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate><guid>https://theo.im/blog/2017/10/17/use-minio-with-aliyun-oss/</guid><description>&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>不可否认，现在互联网的一个大「单点」就是对象存储 &lt;a href="https://aws.amazon.com/s3">Amazon S3&lt;/a> 了，大量的应用使用了 S3 的 API，这带来了一个问题，就是应用难于迁移。虽然改客户端这层这个方法，但毕竟侵入性太大，对于一个拥有众多服务的系统来说，实现的成本比较高。&lt;/p>
&lt;p>还有另外一种方案，就是提供一个 Gateway，提供与 S3 兼容的 API 供原来的客户端使用；中转请求后打入其它类型的对象存储中（本文为阿里云 &lt;a href="https://www.aliyun.com/product/oss">OSS&lt;/a>）。&lt;/p></description></item><item><title>解决 AWS ELB 偶发的 502 Bad Gateway 错误</title><link>https://theo.im/blog/2017/10/14/suspicious-502-error-from-elb/</link><pubDate>Sat, 14 Oct 2017 00:00:00 +0000</pubDate><guid>https://theo.im/blog/2017/10/14/suspicious-502-error-from-elb/</guid><description>问题描述 在使用了 Prometheus blackbox_exporter 做了 HTTP 协议的监控之后，blackbox_exporter 偶尔会报一些 ProbeDown 的报警，经过检查是 502 Bad Gateway 错误，但此时后端是正常的，只是在 AWS ELB 的监控指标中，看到了 ELB HTTP 5xx 相关错误，因此困扰了一段时间。
HTTP 数据流向如下：
[Client] --- [ELB] --- [nginx] --- [App Servers] 排查问题 最开始是怀疑是后端问题，但是查阅了 nginx 和 App servers 的日志，没有任何结果，只是在 ELB 日志里面找到了 502 Bad Gateway 的错误信息。无奈之下甚至怀疑 nginx 所在 EC2 instance 有问题，因此求助了 AWS 技术支持。根据建议，在 nginx 这端做了 tcpdump 抓包，最后终于在 AWS 技术支持的帮助下，定位并解决了问题 🎉。
先补充一个知识：如果后端支持的话，ELB 会使用保持连接（HTTP persistent/keep-alive connections）。来看看这一个保持连接的 TCP stream：
其中，10.100.2.186 是 ELB 内部 IP，10.100.250.22 是 nginx 服务器内部 IP。这样，可以看到：</description></item></channel></rss>